name: Docker Image CI

on:
  push:
    branches: [ master ]

  workflow_dispatch:

jobs:

  build:

    runs-on: ubuntu-latest

    steps:

      - name: Check Out Repo
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/atlas:latest
          run: |
            set +e
            set -x
            git_hash=${GITHUB_SHA::8}
            git_branch=$(echo ${GITHUB_REF} | sed 's;refs/heads/;;' | sed -r 's/[:/.]+/-/g' | tr -dc 'a-zA-Z0-9_-')
            if [[ "$GITHUB_REF" != "refs/heads/"* ]]; then
              unset git_branch
            else
              git_tag=$(git tag --contains=${git_branch} 2>/dev/null | sed -r 's/[:/.]+/-/g' | head -n 1 | tr -dc 'a-z0-9A-Z_-')
            fi
            if [[ "$git_branch" == *"master"* ]]; then
              othertags="latest"
            fi
            image=${{env.IMAGE_NAME}}
            set -e
            echo "::group::Build image"
            docker build \
              --build-arg "BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" \
              --build-arg "BUILD_GIT_BRANCH=$git_branch" \
              --build-arg "BUILD_GIT_HASH=$git_hash" \
              --build-arg "BUILD_GIT_TAG=$git_tag" \
              -f app.dockerfile \
              -t $image:$git_hash .
            echo "::endgroup::"
            echo "::group::Push images"
            for tag in $git_hash $git_tag $git_branch ${{env.INPUT_CUSTOMTAG}} $othertags; do
              docker tag $image:$git_hash $image:$tag
              docker push $image:$tag
            done
            echo "::endgroup::"

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
